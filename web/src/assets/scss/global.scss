// reset
* {
  box-sizing: border-box;
  outline: none;
}

html {
  font-size: 13px;
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background: #f1f1f1;
  // 字体平滑
  -webkit-font-smoothing: antialiased;
}

a {
  color: #999;
}

// colors
$colors: (
  'primary': #db9e3f,
  'white': #fff,
  'light': #f9f9f9,
  'grey': #999,
  'grey-1': #666,
  'dark-1': #333,
  'dark': #222,
  'black': #000
);

@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }
  .bg-#{$colorKey} {
    background-color: $color;
  }
}

// text align
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var;
  }
}

// font size
$base-font-size: 1rem;
$font-sizes: (
  // 8px
    xxs: 0.6154,
  // 10px
    xs: 0.7692,
  // 12px
    sm: 0.9231,
  // 13px
    md: 1,
  // 14px
    lg: 1.0769,
  // 16px
    xl: 1.2308
);
@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}

// flex
.d-flex {
  display: flex;
}
.flex-col {
  flex-direction: column;
}
$flex-jc: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around
);
@each $jcKey, $jc in $flex-jc {
  .jc-#{$jcKey} {
    justify-content: $jc;
  }
}

$flex-ai: (
  start: flex-start,
  end: flex-end,
  center: center,
  // 交叉轴等高
    stretch: stretch
);
@each $aiKey, $ai in $flex-ai {
  .ai-#{$aiKey} {
    align-items: $ai;
  }
}

.flex-1 {
  flex: 1;
}

.flex-grow-1 {
  flex-grow: 1;
}

// spacing
$spacing-types: (
  m: margin,
  p: padding
);
$spacing-direction: (
  t: top,
  r: right,
  b: bottom,
  l: left
);
$spacing-base-size: 1rem;
$spacing-sizes: (
  0: 0,
  1: 0.25,
  2: 0.5,
  3: 1,
  4: 1.5,
  5: 3
);
@each $typeKey, $type in $spacing-types {
  @each $sizeKey, $size in $spacing-sizes {
    // .m-1
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
    // .mx-1
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-right: $size * $spacing-base-size;
      #{$type}-left: $size * $spacing-base-size;
    }
    // .my-1
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }

  // .mt-1
  @each $directionKey, $direction in $spacing-direction {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}

// button
.btn {
  border: none;
  border-radius: 0.1538rem;
  font-size: map-get($font-sizes, 'sm') * $base-font-size;
  padding: 0.3rem 0.6rem;
}

// nav
.nav {
  .nav-item {
    border-bottom: 0.2308rem solid transparent;
    padding-bottom: 0.18rem;
    // & 符号平级选择器
    &.active {
      border-bottom: 0.2308rem solid #fff;
    }
  }
}
